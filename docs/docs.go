// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/classwork": {
            "post": {
                "description": "Returns classwork for the user for the marking periods specified.\nIf no marking periods are specified, the classwork for the current marking period is returned.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classwork"
                ],
                "parameters": [
                    {
                        "description": "Body Params",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/controllers.classworkRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ClassworkResponse"
                        }
                    }
                }
            }
        },
        "/ipr": {
            "post": {
                "description": "Returns the IPR(s) for the user. If the date parameter is not passed into the body, the most recent IPR is returned.\nIt is important the format of the date follows the format \"01/02/2006\" (01 = month, 02 = day, 2006 = year), with leading zeros like shown in the format.\nFor all possible dates, refer to the \"/ipr/all\" endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ipr"
                ],
                "parameters": [
                    {
                        "description": "Body Params",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/controllers.iprRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IPRResponse"
                        }
                    }
                }
            }
        },
        "/ipr/all": {
            "post": {
                "description": "Returns all the IPRs for the user, or just the dates depending on the DatesOnly parameter's value in the body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ipr"
                ],
                "parameters": [
                    {
                        "description": "Body Params",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/controllers.iprAllRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IPRResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Pre-registers the user with the API by logging them into HAC early, and caching the cookies.\nSubsequent requests using the same credentials will use these stored cookies, leading to faster response times for other endpoints.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "parameters": [
                    {
                        "description": "Body Params",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/controllers.loginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.classworkRequestBody": {
            "type": "object",
            "required": [
                "base",
                "password",
                "username"
            ],
            "properties": {
                "base": {
                    "description": "The base URL for the PowerSchool HAC service",
                    "type": "string",
                    "example": "homeaccess.katyisd.org"
                },
                "markingPeriods": {
                    "description": "The marking period to pull data from",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                },
                "password": {
                    "description": "The password to log in with",
                    "type": "string",
                    "example": "j382704"
                },
                "username": {
                    "description": "The username to log in with",
                    "type": "string",
                    "example": "j1732901"
                }
            }
        },
        "controllers.iprAllRequestBody": {
            "type": "object",
            "required": [
                "base",
                "password",
                "username"
            ],
            "properties": {
                "base": {
                    "description": "The base URL for the PowerSchool HAC service",
                    "type": "string",
                    "example": "homeaccess.katyisd.org"
                },
                "datesOnly": {
                    "description": "Whether to return only dates or all the IPRs",
                    "type": "boolean",
                    "default": false,
                    "example": true
                },
                "password": {
                    "description": "The password to log in with",
                    "type": "string",
                    "example": "j382704"
                },
                "username": {
                    "description": "The username to log in with",
                    "type": "string",
                    "example": "j1732901"
                }
            }
        },
        "controllers.iprRequestBody": {
            "type": "object",
            "required": [
                "base",
                "password",
                "username"
            ],
            "properties": {
                "base": {
                    "description": "The base URL for the PowerSchool HAC service",
                    "type": "string",
                    "example": "homeaccess.katyisd.org"
                },
                "date": {
                    "description": "The date of the IPR to return",
                    "type": "string",
                    "example": "09/06/2022"
                },
                "password": {
                    "description": "The password to log in with",
                    "type": "string",
                    "example": "j382704"
                },
                "username": {
                    "description": "The username to log in with",
                    "type": "string",
                    "example": "j1732901"
                }
            }
        },
        "controllers.loginRequestBody": {
            "type": "object",
            "required": [
                "base",
                "password",
                "username"
            ],
            "properties": {
                "base": {
                    "description": "The base URL for the PowerSchool HAC service",
                    "type": "string",
                    "example": "homeaccess.katyisd.org"
                },
                "password": {
                    "description": "The password to register",
                    "type": "string",
                    "example": "j382704"
                },
                "username": {
                    "description": "The username to register",
                    "type": "string",
                    "example": "j1732901"
                }
            }
        },
        "models.Assignment": {
            "type": "object",
            "properties": {
                "assignedDate": {
                    "description": "The date the assignment was assigned",
                    "type": "string"
                },
                "category": {
                    "description": "The category of the assignment (major, minor, other, etc)",
                    "type": "string"
                },
                "dropped": {
                    "description": "Whether the assignment was dropped or not",
                    "type": "boolean"
                },
                "dueDate": {
                    "description": "The date the assignment is due",
                    "type": "string"
                },
                "grade": {
                    "description": "What grade the user got on the assignment",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the assignment",
                    "type": "string"
                },
                "totalPoints": {
                    "description": "The total points that could be earned on the assignment",
                    "type": "string"
                }
            }
        },
        "models.Class": {
            "type": "object",
            "properties": {
                "course": {
                    "description": "The course ID of the class",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the class",
                    "type": "string"
                },
                "period": {
                    "description": "What period the class is for the student, relative to the current schedule",
                    "type": "string"
                },
                "room": {
                    "description": "The room number of the class",
                    "type": "string"
                },
                "teacher": {
                    "description": "The name of the teacher of the class",
                    "type": "string"
                }
            }
        },
        "models.Classwork": {
            "type": "object",
            "properties": {
                "entries": {
                    "description": "An array of ClassworkEntry structs containing classwork for each class",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClassworkEntry"
                    }
                },
                "sixWeeks": {
                    "description": "The marking period the classwork is for",
                    "type": "integer"
                }
            }
        },
        "models.ClassworkEntry": {
            "type": "object",
            "properties": {
                "assignments": {
                    "description": "All the assignments currently entered for the class",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Assignment"
                    }
                },
                "average": {
                    "description": "The average grade for that class",
                    "type": "string"
                },
                "class": {
                    "description": "Class information about the entry",
                    "$ref": "#/definitions/models.Class"
                },
                "position": {
                    "description": "The position of the class, used for ordering",
                    "type": "integer"
                }
            }
        },
        "models.ClassworkResponse": {
            "type": "object",
            "properties": {
                "classwork": {
                    "description": "The resulting classwork",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Classwork"
                    }
                },
                "err": {
                    "description": "If there was an error",
                    "type": "boolean"
                },
                "msg": {
                    "description": "The associated message",
                    "type": "string"
                }
            }
        },
        "models.IPR": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "The date the IPR was submitted",
                    "type": "string"
                },
                "entries": {
                    "description": "An array representing all the IPR entries",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IPREntry"
                    }
                }
            }
        },
        "models.IPREntry": {
            "type": "object",
            "properties": {
                "class": {
                    "description": "Information about the class related to the IPREntry",
                    "$ref": "#/definitions/models.Class"
                },
                "grade": {
                    "description": "The average at the moment the progress report was submitted",
                    "type": "string"
                }
            }
        },
        "models.IPRResponse": {
            "type": "object",
            "properties": {
                "err": {
                    "description": "If there was an error",
                    "type": "boolean"
                },
                "ipr": {
                    "description": "The resulting IPR(s)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IPR"
                    }
                },
                "msg": {
                    "description": "The associated message",
                    "type": "string"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "err": {
                    "description": "If there was an error",
                    "type": "boolean"
                },
                "msg": {
                    "description": "The associated message",
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Caching a login with the API",
            "name": "auth"
        },
        {
            "description": "Get data about classwork",
            "name": "classwork"
        },
        {
            "description": "Get data about interim progress report(s)",
            "name": "ipr"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "HAC Information API",
	Description:      "An API to fetch data from Home Access Center.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
